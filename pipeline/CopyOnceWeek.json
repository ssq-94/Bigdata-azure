{
	"name": "CopyOnceWeek",
	"properties": {
		"description": "used to copy postTypes and user tables from Postgres DB once a week.",
		"activities": [
			{
				"name": "Copy PostTypes",
				"description": "Copy postTypes table",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete PostTypes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_postTypes",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_load_postTypes_my_blob",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Archive PostTypes",
				"description": "store post types table after deleting them.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_load_postTypes_my_blob",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_archive_postTypes",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy Users",
				"description": "copy users table",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete Users",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_users",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_load_Users_my_blob",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Archive Users",
				"description": "store user tables after deleting them.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_load_Users_my_blob",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_archive_users",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete PostTypes",
				"description": "Delete postsTypes folder",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Archive PostTypes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_load_postTypes_my_blob",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "ls_my_blob",
							"type": "LinkedServiceReference"
						},
						"path": "bd-project/Landing"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Delete Users",
				"description": "Delete users folder",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Archive Users",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_load_Users_my_blob",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "ls_my_blob",
							"type": "LinkedServiceReference"
						},
						"path": "bd-project/Landing"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Send Email Notification",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Copy PostTypes",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Copy Users",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-85.eastus.logic.azure.com:443/workflows/9a17a8c402dc40c1a3871f16a1171355/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=x7DMKL0_XFPqjfbgq-ISRYhEefF2KSrIfeI2OOvjC84",
					"body": {
						"value": "{\n    'pipelineName': '@{pipeline().Pipeline}',\n    'datafactoryname': '@{pipeline().DataFactory}',\n    'triggername': '@{pipeline().TriggerName}', \n    'runid': '@{pipeline().RunId}',\n}\n",
						"type": "Expression"
					}
				}
			}
		],
		"folder": {
			"name": "adf-bd-pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2024-05-26T03:38:51Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}