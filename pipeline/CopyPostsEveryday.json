{
	"name": "CopyPostsEveryday",
	"properties": {
		"description": "used to copy post files from the blob storage DB daliy.",
		"activities": [
			{
				"name": "Get Folder Info",
				"description": "Check folder Exist or not",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_metadata",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "Check Folder",
				"description": "Check folder if exist true if not return fail message.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Folder Info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Get Folder Info').output.exists",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Folder Not Exist",
							"description": "Folder Not Exist",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Folder does't exists",
								"errorCode": "100"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy Post",
							"description": "copy posts files",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete Posts",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_parquet_posts_blob",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_parquet_load_posts_my_blob",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete Posts",
							"description": "delete posts folder",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Archive posts",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_parquet_load_posts_my_blob",
									"type": "DatasetReference"
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "ls_my_blob",
										"type": "LinkedServiceReference"
									},
									"path": "bd-project/Landing"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Archive posts",
							"description": "store posts file after deleting them.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_parquet_load_posts_my_blob",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_archive_daily",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Run ML Analysis",
							"description": "Run ML model on posts files",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Copy Post",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/miss.soso200@hotmail.com/ML Sentiment Analysis"
							},
							"linkedServiceName": {
								"referenceName": "ls_db_ml_posts",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Send Email Notification",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Check Folder",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-85.eastus.logic.azure.com:443/workflows/9a17a8c402dc40c1a3871f16a1171355/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=x7DMKL0_XFPqjfbgq-ISRYhEefF2KSrIfeI2OOvjC84",
					"body": {
						"value": "{\n    'pipelineName': '@{pipeline().Pipeline}',\n    'datafactoryname': '@{pipeline().DataFactory}',\n    'triggername': '@{pipeline().TriggerName}', \n    'runid': '@{pipeline().RunId}',\n}\n",
						"type": "Expression"
					}
				}
			}
		],
		"folder": {
			"name": "adf-bd-pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2024-05-26T03:37:58Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}